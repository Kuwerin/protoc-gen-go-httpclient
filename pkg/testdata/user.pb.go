// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v5.28.1
// source: dummyjson/user/v1/user.proto

package client

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserModel.
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user's unique identifier.
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The user's first name.
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// The user's last name.
	LastName string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// The user's maiden name.
	MaidenName string `protobuf:"bytes,4,opt,name=maiden_name,json=maidenName,proto3" json:"maiden_name,omitempty"`
	// The user's age.
	Age uint32 `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty"`
	// The user's gender.
	Gender string `protobuf:"bytes,6,opt,name=gender,proto3" json:"gender,omitempty"`
	// The user's email.
	Email string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	// The user's phone.
	Phone string `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`
	// The user's username.
	Username string `protobuf:"bytes,9,opt,name=username,proto3" json:"username,omitempty"`
	// The user's password.
	Password string `protobuf:"bytes,10,opt,name=password,proto3" json:"password,omitempty"`
	// The user's birth date.
	BirthDate string `protobuf:"bytes,11,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	// The user's image.
	Image string `protobuf:"bytes,12,opt,name=image,proto3" json:"image,omitempty"`
	// The user's blood group.
	BloodGroup string `protobuf:"bytes,13,opt,name=blood_group,json=bloodGroup,proto3" json:"blood_group,omitempty"`
	// The user's height.
	Height float64 `protobuf:"fixed64,14,opt,name=height,proto3" json:"height,omitempty"`
	// The user's weight.
	Weight float64 `protobuf:"fixed64,15,opt,name=weight,proto3" json:"weight,omitempty"`
	// The user's eye color.
	EyeColor string `protobuf:"bytes,16,opt,name=eye_color,json=eyeColor,proto3" json:"eye_color,omitempty"`
	// The user's hair.
	Hair *User_Hair `protobuf:"bytes,17,opt,name=hair,proto3" json:"hair,omitempty"`
	// The user's IP address.
	Ip string `protobuf:"bytes,18,opt,name=ip,proto3" json:"ip,omitempty"`
	// The user's address.
	Address *User_Address `protobuf:"bytes,19,opt,name=address,proto3" json:"address,omitempty"`
	// The user's MAC address.
	MacAddress string `protobuf:"bytes,20,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// The user's university.
	University string `protobuf:"bytes,21,opt,name=university,proto3" json:"university,omitempty"`
	// The user's bank account info.
	Bank *User_Bank `protobuf:"bytes,22,opt,name=bank,proto3" json:"bank,omitempty"`
	// The user's company info.
	Company *User_Company `protobuf:"bytes,23,opt,name=company,proto3" json:"company,omitempty"`
	// The user's EIN.
	Ein string `protobuf:"bytes,24,opt,name=ein,proto3" json:"ein,omitempty"`
	// The user's SSN.
	Ssn string `protobuf:"bytes,25,opt,name=ssn,proto3" json:"ssn,omitempty"`
	// The user's UserAgent.
	UserAgent string `protobuf:"bytes,26,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	// The info about user's crypto account.
	Crypto *User_Crypto `protobuf:"bytes,27,opt,name=crypto,proto3" json:"crypto,omitempty"`
	// The user's role.
	Role string `protobuf:"bytes,28,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dummyjson_user_v1_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_dummyjson_user_v1_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_dummyjson_user_v1_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetMaidenName() string {
	if x != nil {
		return x.MaidenName
	}
	return ""
}

func (x *User) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *User) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *User) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *User) GetBloodGroup() string {
	if x != nil {
		return x.BloodGroup
	}
	return ""
}

func (x *User) GetHeight() float64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *User) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *User) GetEyeColor() string {
	if x != nil {
		return x.EyeColor
	}
	return ""
}

func (x *User) GetHair() *User_Hair {
	if x != nil {
		return x.Hair
	}
	return nil
}

func (x *User) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *User) GetAddress() *User_Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *User) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *User) GetUniversity() string {
	if x != nil {
		return x.University
	}
	return ""
}

func (x *User) GetBank() *User_Bank {
	if x != nil {
		return x.Bank
	}
	return nil
}

func (x *User) GetCompany() *User_Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *User) GetEin() string {
	if x != nil {
		return x.Ein
	}
	return ""
}

func (x *User) GetSsn() string {
	if x != nil {
		return x.Ssn
	}
	return ""
}

func (x *User) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *User) GetCrypto() *User_Crypto {
	if x != nil {
		return x.Crypto
	}
	return nil
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

// The user's hair.
type User_Hair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user's hair color.
	Color string `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	// The user's hair type.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *User_Hair) Reset() {
	*x = User_Hair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dummyjson_user_v1_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Hair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Hair) ProtoMessage() {}

func (x *User_Hair) ProtoReflect() protoreflect.Message {
	mi := &file_dummyjson_user_v1_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Hair.ProtoReflect.Descriptor instead.
func (*User_Hair) Descriptor() ([]byte, []int) {
	return file_dummyjson_user_v1_user_proto_rawDescGZIP(), []int{0, 0}
}

func (x *User_Hair) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *User_Hair) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// The user's coordinates.
type User_Coordinates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Latitude.
	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	// Longitude.
	Lng float64 `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *User_Coordinates) Reset() {
	*x = User_Coordinates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dummyjson_user_v1_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Coordinates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Coordinates) ProtoMessage() {}

func (x *User_Coordinates) ProtoReflect() protoreflect.Message {
	mi := &file_dummyjson_user_v1_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Coordinates.ProtoReflect.Descriptor instead.
func (*User_Coordinates) Descriptor() ([]byte, []int) {
	return file_dummyjson_user_v1_user_proto_rawDescGZIP(), []int{0, 1}
}

func (x *User_Coordinates) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *User_Coordinates) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

// The address.
type User_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The address.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// The city.
	City string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	// The state.
	State string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	// The state code.
	StateCode string `protobuf:"bytes,4,opt,name=state_code,json=stateCode,proto3" json:"state_code,omitempty"`
	// The postal code.
	PostalCode string `protobuf:"bytes,5,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	// The coordinates.
	Coordinates *User_Coordinates `protobuf:"bytes,6,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	// The country
	Country string `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *User_Address) Reset() {
	*x = User_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dummyjson_user_v1_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Address) ProtoMessage() {}

func (x *User_Address) ProtoReflect() protoreflect.Message {
	mi := &file_dummyjson_user_v1_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Address.ProtoReflect.Descriptor instead.
func (*User_Address) Descriptor() ([]byte, []int) {
	return file_dummyjson_user_v1_user_proto_rawDescGZIP(), []int{0, 2}
}

func (x *User_Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *User_Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *User_Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *User_Address) GetStateCode() string {
	if x != nil {
		return x.StateCode
	}
	return ""
}

func (x *User_Address) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *User_Address) GetCoordinates() *User_Coordinates {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *User_Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

// The user's bank info.
type User_Bank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The card expiration date.
	CardExpire string `protobuf:"bytes,1,opt,name=card_expire,json=cardExpire,proto3" json:"card_expire,omitempty"`
	// The card number.
	CardNumber string `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	// The type of the card.
	CardType string `protobuf:"bytes,3,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// The currency of the card.
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	// IBAN.
	Iban string `protobuf:"bytes,5,opt,name=iban,proto3" json:"iban,omitempty"`
}

func (x *User_Bank) Reset() {
	*x = User_Bank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dummyjson_user_v1_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Bank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Bank) ProtoMessage() {}

func (x *User_Bank) ProtoReflect() protoreflect.Message {
	mi := &file_dummyjson_user_v1_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Bank.ProtoReflect.Descriptor instead.
func (*User_Bank) Descriptor() ([]byte, []int) {
	return file_dummyjson_user_v1_user_proto_rawDescGZIP(), []int{0, 3}
}

func (x *User_Bank) GetCardExpire() string {
	if x != nil {
		return x.CardExpire
	}
	return ""
}

func (x *User_Bank) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *User_Bank) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *User_Bank) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *User_Bank) GetIban() string {
	if x != nil {
		return x.Iban
	}
	return ""
}

// The company info.
type User_Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The department.
	Department string `protobuf:"bytes,1,opt,name=department,proto3" json:"department,omitempty"`
	// The name of the company.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The title of the company.
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// The address of the company.
	Address *User_Address `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *User_Company) Reset() {
	*x = User_Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dummyjson_user_v1_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Company) ProtoMessage() {}

func (x *User_Company) ProtoReflect() protoreflect.Message {
	mi := &file_dummyjson_user_v1_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Company.ProtoReflect.Descriptor instead.
func (*User_Company) Descriptor() ([]byte, []int) {
	return file_dummyjson_user_v1_user_proto_rawDescGZIP(), []int{0, 4}
}

func (x *User_Company) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *User_Company) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User_Company) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *User_Company) GetAddress() *User_Address {
	if x != nil {
		return x.Address
	}
	return nil
}

// The information about crypto.
type User_Crypto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Coin.
	Coin string `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	// Wallet.
	Wallet string `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	// Network.
	Network string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *User_Crypto) Reset() {
	*x = User_Crypto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dummyjson_user_v1_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Crypto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Crypto) ProtoMessage() {}

func (x *User_Crypto) ProtoReflect() protoreflect.Message {
	mi := &file_dummyjson_user_v1_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Crypto.ProtoReflect.Descriptor instead.
func (*User_Crypto) Descriptor() ([]byte, []int) {
	return file_dummyjson_user_v1_user_proto_rawDescGZIP(), []int{0, 5}
}

func (x *User_Crypto) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *User_Crypto) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

func (x *User_Crypto) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

var File_dummyjson_user_v1_user_proto protoreflect.FileDescriptor

var file_dummyjson_user_v1_user_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6a, 0x73, 0x6f, 0x6e, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x22, 0xad, 0x0c, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x64, 0x65, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x69,
	0x64, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6c,
	0x6f, 0x6f, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x79, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x79, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x68, 0x61, 0x69, 0x72,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6a, 0x73,
	0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x48, 0x61, 0x69, 0x72, 0x52, 0x04, 0x68, 0x61, 0x69, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x39, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x75,
	0x6d, 0x6d, 0x79, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x74, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6a, 0x73, 0x6f, 0x6e,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x61,
	0x6e, 0x6b, 0x52, 0x04, 0x62, 0x61, 0x6e, 0x6b, 0x12, 0x39, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x75, 0x6d, 0x6d,
	0x79, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x69, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x73, 0x6e, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x73, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6a, 0x73,
	0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x1a, 0x30, 0x0a, 0x04, 0x48, 0x61, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x1a, 0x31, 0x0a, 0x0b, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x1a, 0xee, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64,
	0x75, 0x6d, 0x6d, 0x79, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x95, 0x01, 0x0a, 0x04, 0x42, 0x61, 0x6e,
	0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x62, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x62, 0x61, 0x6e,
	0x1a, 0x8e, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6a,
	0x73, 0x6f, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x1a, 0x4e, 0x0a, 0x06, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x42, 0x50, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x4b, 0x75, 0x77, 0x65, 0x72, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2d, 0x68, 0x74, 0x74, 0x70, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x6a,
	0x73, 0x6f, 0x6e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x75, 0x73, 0x65, 0x72,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dummyjson_user_v1_user_proto_rawDescOnce sync.Once
	file_dummyjson_user_v1_user_proto_rawDescData = file_dummyjson_user_v1_user_proto_rawDesc
)

func file_dummyjson_user_v1_user_proto_rawDescGZIP() []byte {
	file_dummyjson_user_v1_user_proto_rawDescOnce.Do(func() {
		file_dummyjson_user_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_dummyjson_user_v1_user_proto_rawDescData)
	})
	return file_dummyjson_user_v1_user_proto_rawDescData
}

var file_dummyjson_user_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_dummyjson_user_v1_user_proto_goTypes = []interface{}{
	(*User)(nil),             // 0: dummyjson.user.v1.User
	(*User_Hair)(nil),        // 1: dummyjson.user.v1.User.Hair
	(*User_Coordinates)(nil), // 2: dummyjson.user.v1.User.Coordinates
	(*User_Address)(nil),     // 3: dummyjson.user.v1.User.Address
	(*User_Bank)(nil),        // 4: dummyjson.user.v1.User.Bank
	(*User_Company)(nil),     // 5: dummyjson.user.v1.User.Company
	(*User_Crypto)(nil),      // 6: dummyjson.user.v1.User.Crypto
}
var file_dummyjson_user_v1_user_proto_depIdxs = []int32{
	1, // 0: dummyjson.user.v1.User.hair:type_name -> dummyjson.user.v1.User.Hair
	3, // 1: dummyjson.user.v1.User.address:type_name -> dummyjson.user.v1.User.Address
	4, // 2: dummyjson.user.v1.User.bank:type_name -> dummyjson.user.v1.User.Bank
	5, // 3: dummyjson.user.v1.User.company:type_name -> dummyjson.user.v1.User.Company
	6, // 4: dummyjson.user.v1.User.crypto:type_name -> dummyjson.user.v1.User.Crypto
	2, // 5: dummyjson.user.v1.User.Address.coordinates:type_name -> dummyjson.user.v1.User.Coordinates
	3, // 6: dummyjson.user.v1.User.Company.address:type_name -> dummyjson.user.v1.User.Address
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_dummyjson_user_v1_user_proto_init() }
func file_dummyjson_user_v1_user_proto_init() {
	if File_dummyjson_user_v1_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dummyjson_user_v1_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dummyjson_user_v1_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Hair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dummyjson_user_v1_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Coordinates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dummyjson_user_v1_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dummyjson_user_v1_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Bank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dummyjson_user_v1_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dummyjson_user_v1_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Crypto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dummyjson_user_v1_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dummyjson_user_v1_user_proto_goTypes,
		DependencyIndexes: file_dummyjson_user_v1_user_proto_depIdxs,
		MessageInfos:      file_dummyjson_user_v1_user_proto_msgTypes,
	}.Build()
	File_dummyjson_user_v1_user_proto = out.File
	file_dummyjson_user_v1_user_proto_rawDesc = nil
	file_dummyjson_user_v1_user_proto_goTypes = nil
	file_dummyjson_user_v1_user_proto_depIdxs = nil
}
