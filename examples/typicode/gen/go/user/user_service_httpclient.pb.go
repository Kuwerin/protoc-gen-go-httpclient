//	Code generated by protoc-gen-httpclient. DO NOT EDIT.
//	versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.0

package userapi

import (
	"context"
	"github.com/golang/protobuf/jsonpb"
	"net/http"
	"net/url"
	"regexp"
	"strings"
)

type HTTPClientParams struct {
	URL *url.URL

	AllowUndeclaredFields bool
}

type httpClient struct {
	reqURL string

	client *http.Client

	unmarshaler *jsonpb.Unmarshaler

	UnimplementedUserServiceServer
}

func NewHTTPClient(params *HTTPClientParams) UserServiceServer {

	return &httpClient{
		reqURL: params.URL.String(),

		client: &http.Client{},

		unmarshaler: &jsonpb.Unmarshaler{
			AllowUnknownFields: params.AllowUndeclaredFields,
			AnyResolver:        nil,
		},
	}
}

var reGetUserSlug = regexp.MustCompile("{.*}")

// Gets a user.
func (h *httpClient) GetUser(ctx context.Context, in *GetUserRequest) (*User, error) {
	var response User

	var urlBuilder strings.Builder
	urlBuilder.WriteString(h.reqURL)
	urlBuilder.WriteString(reGetUserSlug.ReplaceAllString("/users/{id}", in.Id))

	req, err := http.NewRequestWithContext(ctx, "GET", urlBuilder.String(), nil)
	if err != nil {
		return nil, err
	}

	res, err := h.client.Do(req)
	if err != nil {
		return nil, err
	}
	defer res.Body.Close()

	if err := h.unmarshaler.Unmarshal(res.Body, &response); err != nil {
		return nil, err
	}

	return &response, nil
}
